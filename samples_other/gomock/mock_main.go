// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockNumIf is a mock of NumIf interface.
type MockNumIf struct {
	ctrl     *gomock.Controller
	recorder *MockNumIfMockRecorder
}

// MockNumIfMockRecorder is the mock recorder for MockNumIf.
type MockNumIfMockRecorder struct {
	mock *MockNumIf
}

// NewMockNumIf creates a new mock instance.
func NewMockNumIf(ctrl *gomock.Controller) *MockNumIf {
	mock := &MockNumIf{ctrl: ctrl}
	mock.recorder = &MockNumIfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNumIf) EXPECT() *MockNumIfMockRecorder {
	return m.recorder
}

// GetNum mocks base method.
func (m *MockNumIf) GetNum() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNum")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetNum indicates an expected call of GetNum.
func (mr *MockNumIfMockRecorder) GetNum() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNum", reflect.TypeOf((*MockNumIf)(nil).GetNum))
}
